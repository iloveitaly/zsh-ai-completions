#compdef pytest

local -a args
args=(
  '(-k)'{-k,--keyword}'[Only run tests which match the given substring expression]:EXPRESSION'
  '(-m)'{-m,--marker}'[Only run tests matching given mark expression]:MARKEXPR'
  '--markers[Show markers]'
  '(-x --exitfirst)'{-x,--exitfirst}'[Exit instantly on first error or failed test]'
  '--fixtures[Show available fixtures]'
  '--fixtures-per-test[Show fixtures per test]'
  '--pdb[Start the interactive Python debugger on errors]'
  '--pdbcls=[Specify a custom interactive Python debugger]:PDBCLS:_files'
  '--trace[Immediately break when running each test]'
  '--capture=[Per-test capturing method]:METHOD:(fd sys no tee-sys)'
  '(-s)'-s'[Shortcut for --capture=no]'
  '--runxfail[Report the results of xfail tests as if they were not marked]'
  '(--lf --last-failed)'{--lf,--last-failed}'[Rerun only the tests that failed at the last run]'
  '(--ff --failed-first)'{--ff,--failed-first}'[Run all tests, but run the last failures first]'
  '(--nf --new-first)'{--nf,--new-first}'[Run tests from new files first]'
  '--cache-show=[Show cache contents]:CACHESHOW'
  '--cache-clear[Remove all cache contents at start of test run]'
  '--lfnf=[Determine test execution with --lf]:LFNF:(all none)'
  '(--sw --stepwise)'{--sw,--stepwise}'[Exit on test failure and continue from last failing test next time]'
  '(--sw-skip --stepwise-skip)'{--sw-skip,--stepwise-skip}'[Ignore the first failing test but stop on the next failing test]'
  '--durations=[Show N slowest setup/test durations]:N'
  '--durations-min=[Minimal duration in seconds for inclusion in slowest list]:N'
  '(-v --verbose)'{-v,--verbose}'[Increase verbosity]'
  '--no-header[Disable header]'
  '--no-summary[Disable summary]'
  '--no-fold-skipped[Do not fold skipped tests in short summary]'
  '(-q --quiet)'{-q,--quiet}'[Decrease verbosity]'
  '--verbosity=[Set verbosity]:VERBOSE'
  '-r[Show extra test summary info]:CHARS'
  '--disable-warnings[Disable warnings summary]'
  '(-l --showlocals)'{-l,--showlocals}'[Show locals in tracebacks]'
  '--no-showlocals[Hide locals in tracebacks]'
  '--tb=[Traceback print mode]:STYLE:(auto long short line native no)'
  '--xfail-tb[Show tracebacks for xfail]'
  '--show-capture=[Controls how captured stdout/stderr/log is shown]:SHOW_CAPTURE:(no stdout stderr log all)'
  '--full-trace[Do not cut any tracebacks]'
  '--color=[Color terminal output]:COLOR:(yes no auto)'
  '--code-highlight=[Whether code should be highlighted]:HIGHLIGHT:(yes no)'
  '--pastebin=[Send failed|all info to bpaste.net pastebin service]:MODE'
  '--junit-xml=[Create junit-xml style report file]:PATH:_files'
  '--junit-prefix=[Prepend prefix to classnames in junit-xml output]:PREFIX'
  '(-W --pythonwarnings)'{-W,--pythonwarnings}'[Set which warnings to report]:PYTHONWARNINGS'
  '--maxfail=[Exit after first num failures or errors]:NUM'
  '--strict-config[Warnings while parsing pytest section of config file raise errors]'
  '--strict-markers[Markers not registered in config file raise errors]'
  '--strict[Alias to --strict-markers]'
  '(-c --config-file)'{-c,--config-file}'[Load configuration from file]:FILE:_files'
  '--continue-on-collection-errors[Force test execution even if collection errors occur]'
  '--rootdir=[Define root directory for tests]:ROOTDIR:_files -/'
  '--collect-only[Only collect tests, do not execute them]'
  '--pyargs[Try to interpret all arguments as Python packages]'
  '--ignore=[Ignore path during collection]:PATH:_files -/'
  '--ignore-glob=[Ignore path pattern during collection]:PATH'
  '--deselect=[Deselect item during collection]:NODEID_PREFIX'
  '--confcutdir=[Only load conftest.py relative to specified dir]:DIR:_files -/'
  '--noconftest[Do not load any conftest.py files]'
  '--keep-duplicates[Keep duplicate tests]'
  '--collect-in-virtualenv[Do not ignore tests in a local virtualenv directory]'
  '--import-mode=[Prepend/append to sys.path when importing test modules]:MODE:(prepend append importlib)'
  '--doctest-modules[Run doctests in all .py modules]'
  '--doctest-report=[Choose output format for diffs on doctest failure]:REPORT:(none cdiff ndiff udiff only_first_failure)'
  '--doctest-glob=[Doctests file matching pattern]:PAT'
  '--doctest-ignore-import-errors[Ignore doctest collection errors]'
  '--doctest-continue-on-failure[For a given doctest, continue to run after the first failure]'
  '--basetemp=[Base temporary directory for this test run]:DIR:_files -/'
  '(-V --version)'{-V,--version}'[Display pytest version and information about plugins]'
  '(-h --help)'{-h,--help}'[Show help message and configuration info]'
  '-p[Early-load given plugin module name or entry point]:NAME'
  '--trace-config[Trace considerations of conftest.py files]'
  '--debug=[Store internal tracing debug information in log file]:DEBUG_FILE_NAME:_files'
  '(-o --override-ini)'{-o,--override-ini}'[Override ini option]:OVERRIDE_INI'
  '--assert=[Control assertion debugging tools]:MODE:(plain rewrite)'
  '--setup-only[Only setup fixtures, do not execute tests]'
  '--setup-show[Show setup of fixtures while executing tests]'
  '--setup-plan[Show what fixtures and tests would be executed but do not execute anything]'
  '--log-level=[Level of messages to catch/display]:LEVEL:(DEBUG INFO WARNING ERROR CRITICAL)'
  '--log-format=[Log format used by the logging module]:LOG_FORMAT'
  '--log-date-format=[Log date format used by the logging module]:LOG_DATE_FORMAT'
  '--log-cli-level=[CLI logging level]:LOG_CLI_LEVEL'
  '--log-cli-format=[Log format used by the logging module]:LOG_CLI_FORMAT'
  '--log-cli-date-format=[Log date format used by the logging module]:LOG_CLI_DATE_FORMAT'
  '--log-file=[Path to a file when logging will be written to]:LOG_FILE:_files'
  '--log-file-mode=[Log file open mode]:MODE:(w a)'
  '--log-file-level=[Log file logging level]:LOG_FILE_LEVEL'
  '--log-file-format=[Log format used by the logging module]:LOG_FILE_FORMAT'
  '--log-file-date-format=[Log date format used by the logging module]:LOG_FILE_DATE_FORMAT'
  '--log-auto-indent=[Auto-indent multiline messages passed to the logging module]:LOG_AUTO_INDENT:(true on false off)'
  '--log-disable=[Disable a logger by name]:LOGGER_DISABLE'
  '*:FILE_OR_DIR:_files'
)

_arguments -s $args

