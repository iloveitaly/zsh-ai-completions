#compdef flowctl

_flowctl() {
  local -a commands
  commands=(
    'auth:Authenticate with Flow'
    'catalog:Work with the current Flow catalog'
    'collections:Work with Flow collections'
    'draft:Work with your Flow catalog drafts'
    'generate:Generate derivation project files and implementation stubs'
    'logs:Read operational logs of your tasks'
    'preview:Locally run and preview a capture, derivation, or materialization'
    'raw:Advanced, low-level, and experimental commands'
  )

  _arguments -C \
    '1: :->cmds' \
    '*::arg:->args'

  case "$state" in
    cmds)
      _describe -t commands 'flowctl commands' commands
      ;;
    args)
      case $line[1] in
        auth|catalog|collections|draft|raw)
          _flowctl_subcommands $line[1]
          ;;
        generate|logs|preview)
          _flowctl_options $line[1]
          ;;
      esac
      ;;
  esac
}

_flowctl_subcommands() {
  local -a subcmds
  case "$1" in
    auth)
      subcmds=(
        'login:Authenticate with Flow'
        'token:Authenticate using a secret access token'
        'roles:Work with authorization roles and grants'
      )
      ;;
    catalog)
      subcmds=(
        'list:List catalog specifications'
        'delete:Delete catalog specifications'
        'pull-specs:Pull down catalog specifications'
        'publish:Publish catalog specifications'
        'test:Test catalog specifications'
        'history:History of a catalog specification'
        'draft:Add a catalog specification to your current draft'
      )
      ;;
    collections)
      subcmds=(
        'read:Read data from a Flow collection'
        'list-journals:List journals of a flow collection'
        'list-fragments:List journal fragments of a flow collection'
      )
      ;;
    draft)
      subcmds=(
        'author:Author to a draft'
        'create:Create a new draft'
        'delete:Delete your current draft'
        'describe:Describe your current draft'
        'develop:Develop your current draft'
        'list:List your catalog drafts'
        'publish:Test and publish the current draft'
        'select:Select a draft to work on'
        'test:Test the current draft'
      )
      ;;
    raw)
      subcmds=(
        'get:Issue a custom table select request'
        'rpc:Issue a custom RPC request'
        'update:Issue a custom table update request'
        'build:Perform a configured build of catalog sources'
        'bundle:Bundle catalog sources'
        'combine:Combine over an input stream of documents'
        'materialize-fixture:Generate a materialization fixture'
        'discover:Discover a connector and write catalog files'
        'spec:Get the spec output of a connector'
        'oauth:Test a connector'"'"'s OAuth config'
        'json-schema:Emit the Flow specification JSON-Schema'
        'stats:Read stats collection documents'
      )
      ;;
  esac
  _describe -t subcommands 'subcommands' subcmds
}

_flowctl_options() {
  case "$1" in
    generate)
      _arguments \
        '--source=[Path or URL to a Flow specification file]:file:_files'
      ;;
    logs)
      _arguments \
        '--task=[The name of the task]:task' \
        '--follow[Continue reading indefinitely]' \
        '--since=[Start reading from this far in the past]:time'
      ;;
    preview)
      _arguments \
        '--source=[Path or URL to a Flow specification file]:file:_files' \
        '--name=[Name of the task to preview]:name' \
        '--delay=[Artificial delay between transactions]:delay' \
        '--timeout=[How long can the task produce no data]:timeout' \
        '--sessions=[How many connector sessions to run]:sessions' \
        '--fixture=[Path to a transactions fixture]:file:_files' \
        '--network=[Docker network to run connector images]:network' \
        '--initial-state=[Initial JSON connector state]:json' \
        '--output-state[Output state updates]' \
        '--output-apply[Output apply RPC description]'
      ;;
  esac
}

_flowctl "$@"
