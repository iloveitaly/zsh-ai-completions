#compdef q

local -a options

options=(
  '(-q --qname)'{-q,--qname=}'[Query name]:query name'
  '(-s --server)'{-s,--server=}'[DNS server(s)]:DNS server'
  '(-t --type)'{-t,--type=}'[RR type]:RR type'
  '(-x --reverse)'{-x,--reverse}'[Reverse lookup]'
  '(-d --dnssec)'{-d,--dnssec}'[Set the DO (DNSSEC OK) bit in the OPT record]'
  '(-n --nsid)'{-n,--nsid}'[Set EDNS0 NSID opt]'
  '--subnet=[Set EDNS0 client subnet]:subnet'
  '(-c --chaos)'{-c,--chaos}'[Use CHAOS query class]'
  '-C=[Set query class]:query class'
  '(-p --odoh-proxy)'{-p,--odoh-proxy=}'[ODoH proxy]:proxy'
  '--timeout=[Query timeout]:timeout'
  '--pad[Set EDNS0 padding]'
  '--http2[Use HTTP/2 for DoH]'
  '--http3[Use HTTP/3 for DoH]'
  '--id-check[Check DNS response ID]'
  '--reuse-conn[Reuse connections across queries to the same server]'
  '--txtconcat[Concatenate TXT responses]'
  '--qid=[Set query ID]:query ID'
  '(-b --bootstrap-server)'{-b,--bootstrap-server=}'[DNS server to use for bootstrapping]:bootstrap server'
  '--bootstrap-timeout=[Bootstrapping timeout]:timeout'
  '--cookie=[EDNS0 cookie]:cookie'
  '--recaxfr[Perform recursive AXFR]'
  '(-f --format)'{-f,--format=}'[Output format]:format:(pretty column json yaml raw)'
  '--pretty-ttls[Format TTLs in human readable format]'
  '--short-ttls[Remove zero components of pretty TTLs]'
  '--color[Enable color output]'
  '--question[Show question section]'
  '--answer[Show answer section]'
  '--authority[Show authority section]'
  '--additional[Show additional section]'
  '(-S --stats)'{-S,--stats}'[Show time statistics]'
  '--all[Show all sections and statistics]'
  '-w[Resolve ASN/ASName for A and AAAA records]'
  '(-r --short)'{-r,--short}'[Show record values only]'
  '(-R --resolve-ips)'{-R,--resolve-ips}'[Resolve PTR records for IP addresses in A and AAAA records]'
  '--round-ttls[Round TTLs to the nearest minute]'
  '--aa[Set AA (Authoritative Answer) flag in query]'
  '--ad[Set AD (Authentic Data) flag in query]'
  '--cd[Set CD (Checking Disabled) flag in query]'
  '--rd[Set RD (Recursion Desired) flag in query]'
  '--ra[Set RA (Recursion Available) flag in query]'
  '--z[Set Z (Zero) flag in query]'
  '--t[Set TC (Truncated) flag in query]'
  '(-i --tls-insecure-skip-verify)'{-i,--tls-insecure-skip-verify}'[Disable TLS certificate verification]'
  '--tls-server-name=[TLS server name for host verification]:server name'
  '--tls-min-version=[Minimum TLS version to use]:TLS version'
  '--tls-max-version=[Maximum TLS version to use]:TLS version'
  '--tls-next-protos=[TLS next protocols for ALPN]:protocols'
  '--tls-cipher-suites=[TLS cipher suites]:cipher suites'
  '--tls-curve-preferences=[TLS curve preferences]:curve preferences'
  '--tls-client-cert=[TLS client certificate file]:certificate file:_files'
  '--tls-client-key=[TLS client key file]:key file:_files'
  '--tls-key-log-file=[TLS key log file]:log file:_files'
  '--http-user-agent=[HTTP user agent]:user agent'
  '--http-method=[HTTP method]:method:(GET POST)'
  '--pmtud[PMTU discovery]'
  '--quic-alpn-tokens=[QUIC ALPN tokens]:tokens'
  '--quic-length-prefix[Add RFC 9250 compliant length prefix]'
  '--dnscrypt-tcp[Use TCP for DNSCrypt]'
  '--dnscrypt-udp-size=[Maximum size of a DNS response]:size'
  '--dnscrypt-key=[DNSCrypt public key]:key'
  '--dnscrypt-provider=[DNSCrypt provider name]:provider'
  '--default-rr-types=[Default record types]:record types'
  '--udp-buffer=[Set EDNS0 UDP size in query]:size'
  '(-v --verbose)'{-v,--verbose}'[Show verbose log messages]'
  '--trace[Show trace log messages]'
  '(-V --version)'{-V,--version}'[Show version and exit]'
  '(-h --help)'{-h,--help}'[Show this help message]'
)

_arguments -s $options

